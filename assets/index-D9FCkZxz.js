(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(o){if(o.ep)return;o.ep=!0;const n=t(o);fetch(o.href,n)}})();const w=document.querySelector("#popup-rules"),_=document.querySelector("#close-rules"),R=document.querySelector("#show-rules");R&&R.addEventListener("click",()=>{w.classList.remove("hidden")});_&&_.addEventListener("click",()=>{w.classList.add("hidden")});w&&w.addEventListener("click",r=>{r.target===w&&w.classList.add("hidden")});window.addEventListener("DOMContentLoaded",()=>{let r=document.getElementById("popup-overlay");r&&(r.classList.add("hidden"),r.innerHTML="")});function Y(r){let e=document.getElementById("popup-overlay");e||(e=document.createElement("div"),e.id="popup-overlay",e.className="hidden",document.body.appendChild(e)),e.classList.remove("hidden"),e.innerHTML=`
    <div class="popup">
      <h2>${r} wins!</h2>
      <span id="close-popup">&times;</span>
    </div>
  `,e.onclick=t=>{const s=t.target;s&&s.id==="close-popup"&&(e.classList.add("hidden"),window.location.reload())}}function D(r,e,t){const s=r.neighbors(e),o=r.neighbors(t);return s.filter(n=>o.some(i=>i.q===n.q&&i.r===n.r))}function M(r,e,t){if(!r.isEmpty(t)||!r.neighbors(t).some(c=>!r.isEmpty(c)))return!1;const n=D(r,e,t);return!(n.length===2&&n.every(c=>!r.isEmpty(c)))}function Q(r,e){const t=e.getStackAt(r.position);return t.length>0&&t[t.length-1]===r}function N(r,e){const t=r.getStackAt(e);return!t||t.length===0?null:t[t.length-1]}function v(r){const e=document.getElementById("game-error");e&&(e.textContent=r,setTimeout(()=>{e.textContent=""},5e3))}function S(r,e){const t=e.getBoundingClientRect(),s=r.clientX-t.left,o=r.clientY-t.top;return{x:s,y:o}}function X(r,e,t){if(t.filter(o=>o.color===e).length>0){const o=r.allCoordsAroundHive();for(const n of o){if(!r.isEmpty(n))continue;const i=r.neighbors(n).map(a=>N(r,a)).filter(a=>a!==null);if(i.length===0)continue;const c=i.some(a=>a.owner===e),l=i.some(a=>a.owner!==e);if(c&&!l)return!0}}for(const o of r.pieces)if(o.owner===e&&Q(o,r)&&o.legalMoves(r).length>0)return!0;return!1}class G{pieces=[];addPiece(e,t){e.position=t,this.pieces.push(e)}isEmpty(e){return!this.pieces.some(t=>t.position.q===e.q&&t.position.r===e.r)}neighbors(e){return[{q:1,r:0},{q:-1,r:0},{q:0,r:1},{q:0,r:-1},{q:1,r:-1},{q:-1,r:1}].map(s=>({q:e.q+s.q,r:e.r+s.r}))}isHiveIntact(e,t){if(this.pieces.length<=1)return!0;const s=new Map;for(const a of this.pieces){const d=`${a.position.q},${a.position.r}`;s.has(d)||s.set(d,[]),s.get(d).push(a)}const o=`${e.position.q},${e.position.r}`,n=`${t.q},${t.r}`;s.has(o)&&(s.set(o,s.get(o).filter(a=>a!==e)),s.get(o).length===0&&s.delete(o)),s.has(n)||s.set(n,[]),s.get(n).push(e);const i=Array.from(s.entries()).map(([a,d])=>({key:a,top:d[d.length-1]})).map(({key:a})=>a);if(i.length===0)return!0;const c=new Set,l=[i[0]];for(;l.length>0;){const a=l.pop();if(c.has(a))continue;c.add(a);const[d,g]=a.split(",").map(Number);this.neighbors({q:d,r:g}).forEach(L=>{const u=`${L.q},${L.r}`;i.includes(u)&&!c.has(u)&&l.push(u)})}return c.size===i.length}stackHeight(e){return this.pieces.filter(t=>t.position.q===e.q&&t.position.r===e.r).length}getStackAt(e){return this.pieces.filter(t=>t.position.q===e.q&&t.position.r===e.r).sort((t,s)=>t.stackLevel-s.stackLevel)}updateStackLevelsAt(e){return this.getStackAt(e).length}directions(){return[{q:1,r:0},{q:1,r:-1},{q:0,r:-1},{q:-1,r:0},{q:-1,r:1},{q:0,r:1}]}addDir(e,t){return{q:e.q+t.q,r:e.r+t.r}}allCoordsAroundHive(){const e=new Set;for(const t of this.pieces)if(N(this,t.position))for(const o of this.neighbors(t.position))this.isEmpty(o)&&e.add(`${o.q},${o.r}`);return Array.from(e).map(t=>{const[s,o]=t.split(",").map(Number);return{q:s,r:o}})}}class E{owner;position;stackLevel=0;constructor(e,t){this.owner=e,this.position=t}}Y("White");class j{board;currentPlayer;turnCount;constructor(){this.board=new G,this.currentPlayer=null,this.turnCount=1}nextTurn(){this.currentPlayer=this.currentPlayer==="White"?"Black":"White",this.turnCount++}placePiece(e,t){if(console.log("placePiece",t.q,t.r),e.owner!==this.currentPlayer)return console.log("not your turn"),v("❌ Not your turn!"),!1;if(!this.board.isEmpty(t))return!1;if(this.board.pieces.length===0)return this.board.addPiece(e,t),!0;if(this.board.pieces.length===1)return this.board.neighbors(t).some(a=>!this.board.isEmpty(a))?(this.board.addPiece(e,t),!0):(console.log("Move failed: Hive is not intact"),v("❌ Hive is not intact!"),!1);const s=this.board.neighbors(t);let o=!1;for(const c of s){const l=N(this.board,c);if(l)if(l.owner===this.currentPlayer)o=!0;else return console.log("Move failed: You can place pieces next to your own, not your opponent’s."),v("❌ Piece must touch your color only!"),!1}if(!o)return console.log("Move failed: hive is not intact"),v("❌ Hive is not intact!"),!1;const n=this.board.pieces.filter(c=>c.owner===e.owner);return!n.some(c=>c.constructor.name==="QueenBee"||c.type==="bee")&&n.length>=3&&e.constructor.name!=="QueenBee"&&e.type!=="bee"?(console.log("Move failed: Queen should be placed at 4 move"),v("❌ The Queen Bee must be placed by turn 4!"),!1):(this.board.addPiece(e,t),this.board.updateStackLevelsAt(t),!0)}movePiece(e,t){if(e.owner!==this.currentPlayer)return!1;const s=e.legalMoves(this.board);if(!s.some(i=>i.q===t.q&&i.r===t.r))return console.log("Move failed: Not a legal move"),console.log("Legal moves:",s),console.log("Attempted move to:",t),!1;const n={...e.position};return this.board.pieces.length>2&&!(e.type==="beetle"&&e.stackLevel===0)&&(e.position=t,!this.board.isHiveIntact(e,t))?(e.position=n,console.log("Move failed: Hive not intact"),v("❌ Hive is not intact!"),!1):(e.position=t,e.stackLevel=this.board.updateStackLevelsAt(t),!0)}checkWin(){const e=this.board.pieces.filter(t=>t.constructor.name==="QueenBee");for(const t of e)if(this.board.neighbors(t.position).every(n=>!this.board.isEmpty(n)))return t.owner==="White"?"Black":"White";return null}}const C={};function z(r){const t=`/Hive-abstract-game/assets/${r}`;return console.log("Loading asset:",t),t}function F(r,e){const t=`${r}_${e}`;if(!C[t]){const s=new Image;s.src=z(`${r}_${e.toLowerCase()}.png`),C[t]=s}return C[t]}function Z(r,e){r.forEach(t=>{const s=F(t.type,t.color),{x:o,y:n,width:i,height:c}=t;s.complete&&s.naturalWidth>0&&e.drawImage(s,o,n,i,c)})}function K(r,e,t,s){const o=20*t,n=e-s*t-20*t,i=60*t,c=(s+10)*t;let l=i,a=i;const d=["bee","spider","beetle","hopper","ant"],g=r.filter(u=>u.color==="Black").sort((u,W)=>d.indexOf(u.type)-d.indexOf(W.type)),L=r.filter(u=>u.color==="White").sort((u,W)=>d.indexOf(u.type)-d.indexOf(W.type));g.forEach(u=>{u.x=o,u.y=l,u.width=s*t,u.height=s*t,l+=c}),L.forEach(u=>{u.x=n,u.y=a,u.width=s*t,u.height=s*t,a+=c})}function A(r,e,t){const s=(Math.sqrt(3)/3*r-.3333333333333333*e)/t,o=2/3*e/t;return J({q:s,r:o})}function J({q:r,r:e}){const t=-r-e;let s=Math.round(r),o=Math.round(e),n=Math.round(t);const i=Math.abs(s-r),c=Math.abs(o-e),l=Math.abs(n-t);return i>c&&i>l?s=-o-n:c>l&&(o=-s-n),{q:s,r:o}}class U extends E{type="bee";legalMoves(e){const t=this.position,s=e.neighbors(t),o=[];for(const n of s){if(!M(e,t,n))continue;e.isHiveIntact(this,n)&&o.push(n)}return o}}class V extends E{type="beetle";legalMoves(e){const t=e.neighbors(this.position),s=[];for(const o of t){const n=e.isEmpty(o),i=e.stackHeight(this.position)>1;n?i?e.isHiveIntact(this,o)&&M(e,this.position,o)&&s.push(o):e.isHiveIntact(this,o)&&M(e,this.position,o)&&s.push(o):e.isHiveIntact(this,o)&&s.push(o)}return s}}class ee extends E{type="spider";legalMoves(e){const t=[],s=new Set;s.add(`${this.position.q},${this.position.r}`);const o=(n,i)=>{if(i===3){t.push(n);return}for(const c of e.neighbors(n)){const l=`${c.q},${c.r}`;s.has(l)||e.isEmpty(c)&&M(e,n,c)&&e.isHiveIntact(this,c)&&(s.add(l),o(c,i+1),s.delete(l))}};return o(this.position,0),t}}class te extends E{type="hopper";legalMoves(e){const t=[];for(const o of e.directions()){let n=e.addDir(this.position,o),i=!1;for(;!e.isEmpty(n);)i=!0,n=e.addDir(n,o);if(i){if(Math.abs(n.q)>6||Math.abs(n.r)>6||Math.abs(n.q+n.r)>6||!e.isHiveIntact(this,n))continue;t.push(n)}}return t}}class se extends E{type="ant";legalMoves(e){const t=[],s=new Set;s.add(`${this.position.q},${this.position.r}`);const o=n=>{for(const i of e.neighbors(n)){const c=`${i.q},${i.r}`;s.has(c)||e.isEmpty(i)&&M(e,n,i)&&e.isHiveIntact(this,i)&&(s.add(c),t.push(i),o(i),s.delete(c))}};return o(this.position),t}}function ne(r,e,t){switch(r){case"bee":return new U(e,t);case"beetle":return new V(e,t);case"spider":return new ee(e,t);case"hopper":return new te(e,t);case"ant":return new se(e,t);default:return null}}const T={};function oe(r){const t=`/Hive-abstract-game/assets/${r}`;return console.log("Loading asset:",t),t}function O(r,e){const t=`${r}_${e}`;if(!T[t]){const s=new Image;s.src=oe(`${r}_${e.toLowerCase()}.png`),T[t]=s}return T[t]}class ie{ctx;logicalWidth;logicalHeight;physicalWidth;physicalHeight;size;constructor(e,t=30){this.ctx=e.getContext("2d");const s=window.devicePixelRatio||1;this.physicalWidth=e.width,this.physicalHeight=e.height,this.logicalWidth=e.width/s,this.logicalHeight=e.height/s,this.size=t}clear(){this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.fillStyle="#000000",this.ctx.fillRect(0,0,this.physicalWidth,this.physicalHeight),this.ctx.restore()}hexToPixel(e,t){const s=this.logicalWidth/2,o=this.logicalHeight/2,n=Math.sqrt(3)*this.size*(e+t/2)+s,i=3/2*this.size*t+o;return{x:n,y:i}}drawBoard(e,t){for(let n=-6;n<=6;n++)for(let i=-6;i<=6;i++)if(Math.abs(n+i)<=6){const{x:c,y:l}=this.hexToPixel(n,i),a=t&&t.q===n&&t.r===i;this.drawHexCustom(c,l,this.size,a?"#ffe066":void 0)}const o=new Map;for(const n of e.pieces){const i=`${n.position.q},${n.position.r}`;o.has(i)||o.set(i,[]),o.get(i).push(n)}for(const n of o.values()){n.sort((i,c)=>i.stackLevel-c.stackLevel);for(const i of n)this.drawPiece(i)}}drawHexCustom(e,t,s,o="#ddd"){this.ctx.beginPath();for(let n=0;n<6;n++){const i=Math.PI/3*n+Math.PI/6,c=e+s*Math.cos(i),l=t+s*Math.sin(i);n===0?this.ctx.moveTo(c,l):this.ctx.lineTo(c,l)}this.ctx.closePath(),this.ctx.strokeStyle="#333",this.ctx.stroke(),this.ctx.fillStyle=o,this.ctx.fill()}drawPiece(e){const{q:t,r:s}=e.position,{x:o,y:n}=this.hexToPixel(t,s),i=this.size,c=e.type||e.constructor.name.toLowerCase(),l=O(c,e.owner);l.complete&&l.naturalWidth>0&&this.ctx.drawImage(l,o-i*.9,n-i*.9,i*1.8,i*1.8)}}let I=[],k={x:0,y:0},y=[],f=null;const m=document.getElementById("hive-canvas");let x=null;const q=1e3,B=750,P=window.devicePixelRatio||1;m.width=q*P;m.height=B*P;m.style.width=q+"px";m.style.height=B+"px";const H=30,p=30,b=new ie(m,p);b.ctx.setTransform(P,0,0,P,0,0);const h=new j,re=[{type:"bee",count:1},{type:"spider",count:2},{type:"beetle",count:2},{type:"hopper",count:3},{type:"ant",count:3}];let ce=0;function le(){return`p_${ce++}`}function ae(){y=[],["Black","White"].forEach(r=>{re.forEach(({type:e,count:t})=>{for(let s=0;s<t;s++)y.push({id:le(),x:0,y:0,type:e,color:r,width:H,height:H})})}),K(y,q,P,H)}m.addEventListener("click",r=>{const{x:e,y:t}=S(r,m),s=q/2,o=B/2;if(!f){for(let i=y.length-1;i>=0;i--){const c=y[i];if(e>=c.x&&e<=c.x+c.width&&t>=c.y&&t<=c.y+c.height){h.currentPlayer||(h.currentPlayer=c.color,console.log(`First player: ${h.currentPlayer}`),document.getElementById("game-status").textContent=`Game started — ${h.currentPlayer} moves first`),f={from:"bank",bankId:c.id,type:c.type,color:c.color};return}}const n=A(e-s,t-o,p);for(let i=h.board.pieces.length-1;i>=0;i--){const c=h.board.pieces[i];if(c.position.q===n.q&&c.position.r===n.r&&c.owner===h.currentPlayer&&Q(c,h.board)){f={from:"board",ref:c},I=c.legalMoves(h.board),console.log("Selected from board:",f),console.log("Stack level:",f.ref.stackLevel),console.log("Type:",f.ref.type);return}}}if(f){const n=f,i=A(e-s,t-o,p);if(n.from==="bank"){if(Math.abs(i.q)>6||Math.abs(i.r)>6||Math.abs(i.q+i.r)>6){console.log("❌ Outside board bounds:",i),v("❌ Outside board bounds"),f=null,$();return}const a=ne(n.type,n.color,i);if(a&&h.placePiece(a,i)){const d=y.findIndex(g=>g.id===n.bankId);if(d!==-1&&(y.splice(d,1),K(y,q,P,H)),h.board.pieces.length>2){const g=h.currentPlayer==="White"?"Black":"White";X(h.board,g,y)?h.nextTurn():(console.log(`${g} has no legal moves — skipping turn`),v(`⚠️ ${g} has no legal moves — turn skipped!`))}else h.nextTurn()}}else if(n.from==="board")if(h.movePiece(n.ref,i)){console.log("Move successful");const l=h.currentPlayer==="White"?"Black":"White";X(h.board,l,y)?h.nextTurn():(console.log(`${l} has no legal moves — skipping turn`),v(`⚠️ ${l} has no legal moves — turn skipped!`))}else console.log("Move failed");f=null,I=[],$(),document.getElementById("game-status").textContent=`Next move: ${h.currentPlayer}`;const c=h.checkWin();c&&(console.log(`Winner: ${c}`),Y(c))}});m.addEventListener("mousemove",r=>{k=S(r,m);const{x:e,y:t}=S(r,m),s=q/2,o=B/2,n=A(e-s,t-o,p);(!x||x.q!==n.q||x.r!==n.r)&&(x=n,$())});m.addEventListener("mouseleave",()=>{x=null,$()});function he(r,e,t){r.save(),r.fillStyle="rgba(0, 200, 0, 0.3)";const s=new Set,o=[];e.forEach(n=>{const i=`${n.q},${n.r}`;s.has(i)||(s.add(i),o.push(n))}),o.forEach(n=>{const{x:i,y:c}=t.hexToPixel(n.q,n.r);r.beginPath();for(let l=0;l<6;l++){const a=Math.PI/180*(60*l-30),d=i+p*Math.cos(a),g=c+p*Math.sin(a);l===0?r.moveTo(d,g):r.lineTo(d,g)}r.closePath(),r.fill()}),r.restore()}function $(){if(b.clear(),Z(y,b.ctx),b.drawBoard(h.board,x),f&&f.from==="bank"){const r=b.ctx;let e=f.type.toLowerCase();const t=O(e,f.color);t.complete&&t.naturalWidth>0&&r.drawImage(t,k.x-p,k.y-p,p*2,p*2)}else if(f&&f.from==="board"){const r=b.ctx,e=f.ref.type,t=f.ref.owner,s=O(e,t);s.complete&&s.naturalWidth>0&&r.drawImage(s,k.x-p,k.y-p,p*2,p*2)}I.length>0&&he(b.ctx,I,b)}ae();$();document.getElementById("game-container")?.classList.remove("hidden");document.body.classList.add("ready");

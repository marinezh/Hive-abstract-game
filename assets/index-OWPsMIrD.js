(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const w=document.querySelector("#popup-rules"),A=document.querySelector("#close-rules"),N=document.querySelector("#show-rules");N&&N.addEventListener("click",()=>{w.classList.remove("hidden")});A&&A.addEventListener("click",()=>{w.classList.add("hidden")});w&&w.addEventListener("click",c=>{c.target===w&&w.classList.add("hidden")});window.addEventListener("DOMContentLoaded",()=>{let c=document.getElementById("popup-overlay");c&&(c.classList.add("hidden"),c.innerHTML="")});function _(c){let e=document.getElementById("popup-overlay");e||(e=document.createElement("div"),e.id="popup-overlay",e.className="hidden",document.body.appendChild(e)),e.classList.remove("hidden"),e.innerHTML=`
    <div class="popup">
      <h2>${c} wins!</h2>
      <span id="close-popup">&times;</span>
    </div>
  `,e.onclick=t=>{const n=t.target;n&&n.id==="close-popup"&&(e.classList.add("hidden"),window.location.reload())}}class X{pieces=[];addPiece(e,t){e.position=t,this.pieces.push(e)}isEmpty(e){return!this.pieces.some(t=>t.position.q===e.q&&t.position.r===e.r)}neighbors(e){return[{q:1,r:0},{q:-1,r:0},{q:0,r:1},{q:0,r:-1},{q:1,r:-1},{q:-1,r:1}].map(n=>({q:e.q+n.q,r:e.r+n.r}))}isHiveIntact(e,t){if(this.pieces.length<=1)return!0;const n=new Map;for(const l of this.pieces){const u=`${l.position.q},${l.position.r}`;n.has(u)||n.set(u,[]),n.get(u).push(l)}const o=`${e.position.q},${e.position.r}`,s=`${t.q},${t.r}`;n.has(o)&&(n.set(o,n.get(o).filter(l=>l!==e)),n.get(o).length===0&&n.delete(o)),n.has(s)||n.set(s,[]),n.get(s).push(e);const i=Array.from(n.entries()).map(([l,u])=>({key:l,top:u[u.length-1]})).map(({key:l})=>l);if(i.length===0)return!0;const r=new Set,a=[i[0]];for(;a.length>0;){const l=a.pop();if(r.has(l))continue;r.add(l);const[u,m]=l.split(",").map(Number);this.neighbors({q:u,r:m}).forEach(E=>{const h=`${E.q},${E.r}`;i.includes(h)&&!r.has(h)&&a.push(h)})}return r.size===i.length}stackHeight(e){return this.pieces.filter(t=>t.position.q===e.q&&t.position.r===e.r).length}getStackAt(e){return this.pieces.filter(t=>t.position.q===e.q&&t.position.r===e.r).sort((t,n)=>t.stackLevel-n.stackLevel)}updateStackLevelsAt(e){return this.getStackAt(e).length}directions(){return[{q:1,r:0},{q:1,r:-1},{q:0,r:-1},{q:-1,r:0},{q:-1,r:1},{q:0,r:1}]}addDir(e,t){return{q:e.q+t.q,r:e.r+t.r}}}class L{owner;position;stackLevel=0;constructor(e,t){this.owner=e,this.position=t}}_("White");class Y{board;currentPlayer;turnCount;constructor(){this.board=new X,this.currentPlayer="White",this.turnCount=1}nextTurn(){this.currentPlayer=this.currentPlayer==="White"?"Black":"White",this.turnCount++}placePiece(e,t){if(console.log("placePiece",t.q,t.r),e.owner!==this.currentPlayer||!this.board.isEmpty(t))return!1;if(this.board.pieces.length===0)return this.board.addPiece(e,t),!0;if(this.board.pieces.length===1)return this.board.neighbors(t).some(l=>!this.board.isEmpty(l))?(this.board.addPiece(e,t),!0):!1;const n=this.board.neighbors(t);let o=!1;for(const r of n){const a=this.board.pieces.find(l=>l.position.q===r.q&&l.position.r===r.r);if(a)if(a.owner===this.currentPlayer)o=!0;else return!1}if(!o)return!1;const s=this.board.pieces.filter(r=>r.owner===e.owner);return!s.some(r=>r.constructor.name==="QueenBee")&&s.length>=3&&e.constructor.name!=="QueenBee"?!1:(this.board.addPiece(e,t),this.board.updateStackLevelsAt(t),!0)}movePiece(e,t){if(e.owner!==this.currentPlayer)return!1;const n=e.legalMoves(this.board);if(!n.some(i=>i.q===t.q&&i.r===t.r))return console.log("Move failed: Not a legal move"),console.log("Legal moves:",n),console.log("Attempted move to:",t),!1;const s={...e.position};return this.board.pieces.length>2&&!(e.type==="beetle"&&e.stackLevel===0)&&(e.position=t,!this.board.isHiveIntact(e,t))?(e.position=s,console.log("Move failed: Hive not intact"),!1):(e.position=t,e.stackLevel=this.board.updateStackLevelsAt(t),!0)}checkWin(){const e=this.board.pieces.filter(t=>t.constructor.name==="QueenBee");for(const t of e)if(this.board.neighbors(t.position).every(s=>!this.board.isEmpty(s)))return t.owner==="White"?"Black":"White";return null}}const S={};function K(c,e){const t=`${c}_${e}`;if(!S[t]){const n=new Image;n.src=`./src/assets/${c}_${e.toLowerCase()}.png`,S[t]=n}return S[t]}function Q(c,e){c.forEach(t=>{const n=K(t.type,t.color);e.drawImage(n,t.x,t.y,t.width,t.height)})}function R(c,e,t,n){const o=20*t,s=e-n*t-20*t,i=60*t,r=(n+10)*t;let a=i,l=i;const u=["bee","spider","beetle","hopper","ant"],m=c.filter(h=>h.color==="Black").sort((h,B)=>u.indexOf(h.type)-u.indexOf(B.type)),E=c.filter(h=>h.color==="White").sort((h,B)=>u.indexOf(h.type)-u.indexOf(B.type));m.forEach(h=>{h.x=o,h.y=a,h.width=n*t,h.height=n*t,a+=r}),E.forEach(h=>{h.x=s,h.y=l,h.width=n*t,h.height=n*t,l+=r})}function W(c,e,t){const n=(Math.sqrt(3)/3*c-.3333333333333333*e)/t,o=2/3*e/t;return D({q:n,r:o})}function D({q:c,r:e}){const t=-c-e;let n=Math.round(c),o=Math.round(e),s=Math.round(t);const i=Math.abs(n-c),r=Math.abs(o-e),a=Math.abs(s-t);return i>r&&i>a?n=-o-s:r>a&&(o=-n-s),{q:n,r:o}}function j(c,e,t){const n=c.neighbors(e),o=c.neighbors(t);return n.filter(s=>o.some(i=>i.q===s.q&&i.r===s.r))}function P(c,e,t){if(!c.isEmpty(t)||!c.neighbors(t).some(r=>!c.isEmpty(r)))return!1;const s=j(c,e,t);return!(s.length===2&&s.every(r=>!c.isEmpty(r)))}function z(c,e){const t=e.getStackAt(c.position);return t.length>0&&t[t.length-1]===c}class G extends L{type="bee";legalMoves(e){const t=this.position,n=e.neighbors(t),o=[];for(const s of n){if(!P(e,t,s))continue;e.isHiveIntact(this,s)&&o.push(s)}return o}}class F extends L{type="beetle";legalMoves(e){const t=e.neighbors(this.position),n=[];for(const o of t){const s=e.isEmpty(o),i=e.stackHeight(this.position)>1;s?i?e.isHiveIntact(this,o)&&P(e,this.position,o)&&n.push(o):e.isHiveIntact(this,o)&&P(e,this.position,o)&&n.push(o):e.isHiveIntact(this,o)&&n.push(o)}return n}}class Z extends L{type="spider";legalMoves(e){const t=[],n=new Set;n.add(`${this.position.q},${this.position.r}`);const o=(s,i)=>{if(i===3){t.push(s);return}for(const r of e.neighbors(s)){const a=`${r.q},${r.r}`;n.has(a)||e.isEmpty(r)&&P(e,s,r)&&e.isHiveIntact(this,r)&&(n.add(a),o(r,i+1),n.delete(a))}};return o(this.position,0),t}}class J extends L{type="hopper";legalMoves(e){const t=[];for(const o of e.directions()){let s=e.addDir(this.position,o),i=!1;for(;!e.isEmpty(s);)i=!0,s=e.addDir(s,o);if(i){if(Math.abs(s.q)>6||Math.abs(s.r)>6||Math.abs(s.q+s.r)>6||!e.isHiveIntact(this,s))continue;t.push(s)}}return t}}class U extends L{type="ant";legalMoves(e){const t=[],n=new Set;n.add(`${this.position.q},${this.position.r}`);const o=s=>{for(const i of e.neighbors(s)){const r=`${i.q},${i.r}`;n.has(r)||e.isEmpty(i)&&P(e,s,i)&&e.isHiveIntact(this,i)&&(n.add(r),t.push(i),o(i),n.delete(r))}};return o(this.position),t}}function V(c,e,t){switch(c){case"bee":return new G(e,t);case"beetle":return new F(e,t);case"spider":return new Z(e,t);case"hopper":return new J(e,t);case"ant":return new U(e,t);default:return null}}const T={};function C(c,e){const t=`${c}_${e}`;if(!T[t]){const n=new Image;n.src=`./assets/${c}_${e.toLowerCase()}.png`,T[t]=n}return T[t]}class ee{ctx;logicalWidth;logicalHeight;physicalWidth;physicalHeight;size;constructor(e,t=30){this.ctx=e.getContext("2d");const n=window.devicePixelRatio||1;this.physicalWidth=e.width,this.physicalHeight=e.height,this.logicalWidth=e.width/n,this.logicalHeight=e.height/n,this.size=t}clear(){this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.fillStyle="#000000",this.ctx.fillRect(0,0,this.physicalWidth,this.physicalHeight),this.ctx.restore()}hexToPixel(e,t){const n=this.logicalWidth/2,o=this.logicalHeight/2,s=Math.sqrt(3)*this.size*(e+t/2)+n,i=3/2*this.size*t+o;return{x:s,y:i}}drawBoard(e,t){for(let s=-6;s<=6;s++)for(let i=-6;i<=6;i++)if(Math.abs(s+i)<=6){const{x:r,y:a}=this.hexToPixel(s,i),l=t&&t.q===s&&t.r===i;this.drawHexCustom(r,a,this.size,l?"#ffe066":void 0)}const o=new Map;for(const s of e.pieces){const i=`${s.position.q},${s.position.r}`;o.has(i)||o.set(i,[]),o.get(i).push(s)}for(const s of o.values()){s.sort((i,r)=>i.stackLevel-r.stackLevel);for(const i of s)this.drawPiece(i)}}drawHexCustom(e,t,n,o="#ddd"){this.ctx.beginPath();for(let s=0;s<6;s++){const i=Math.PI/3*s+Math.PI/6,r=e+n*Math.cos(i),a=t+n*Math.sin(i);s===0?this.ctx.moveTo(r,a):this.ctx.lineTo(r,a)}this.ctx.closePath(),this.ctx.strokeStyle="#333",this.ctx.stroke(),this.ctx.fillStyle=o,this.ctx.fill()}drawPiece(e){const{q:t,r:n}=e.position,{x:o,y:s}=this.hexToPixel(t,n),i=this.size;let r=e.constructor.name.toLowerCase();r.includes("queen")?r="bee":r.includes("beetle")?r="beetle":r.includes("spider")?r="spider":r.includes("grass")?r="hopper":r.includes("ant")&&(r="ant");const a=C(r,e.owner);this.ctx.drawImage(a,o-i*.9,s-i*.9,i*1.8,i*1.8)}}let $=[],k={x:0,y:0},y=[],d=null;const g=document.getElementById("hive-canvas");let b=null;const x=1e3,H=750,q=window.devicePixelRatio||1;g.width=x*q;g.height=H*q;g.style.width=x+"px";g.style.height=H+"px";const I=30,f=30,v=new ee(g,f);v.ctx.setTransform(q,0,0,q,0,0);const p=new Y,te=[{type:"bee",count:1},{type:"spider",count:2},{type:"beetle",count:2},{type:"hopper",count:3},{type:"ant",count:3}];let se=0;function ne(){return`p_${se++}`}function ie(){y=[],["Black","White"].forEach(c=>{te.forEach(({type:e,count:t})=>{for(let n=0;n<t;n++)y.push({id:ne(),x:0,y:0,type:e,color:c,width:I,height:I})})}),R(y,x,q,I)}function O(c,e){const t=e.getBoundingClientRect(),n=c.clientX-t.left,o=c.clientY-t.top;return{x:n,y:o}}g.addEventListener("click",c=>{const{x:e,y:t}=O(c,g),n=x/2,o=H/2;if(!d){for(let i=y.length-1;i>=0;i--){const r=y[i];if(e>=r.x&&e<=r.x+r.width&&t>=r.y&&t<=r.y+r.height){d={from:"bank",bankId:r.id,type:r.type,color:r.color};return}}const s=W(e-n,t-o,f);for(let i=p.board.pieces.length-1;i>=0;i--){const r=p.board.pieces[i];if(r.position.q===s.q&&r.position.r===s.r&&r.owner===p.currentPlayer&&z(r,p.board)){d={from:"board",ref:r},$=r.legalMoves(p.board),console.log("Selected from board:",d),console.log("Stack level:",d.ref.stackLevel),console.log("Type:",d.ref.type);return}}}if(d){const s=d,i=W(e-n,t-o,f);if(s.from==="bank"){if(Math.abs(i.q)>6||Math.abs(i.r)>6||Math.abs(i.q+i.r)>6){console.log("❌ Outside board bounds:",i),d=null,M();return}const l=V(s.type,s.color,i);if(l&&p.placePiece(l,i)){const u=y.findIndex(m=>m.id===s.bankId);u!==-1&&(y.splice(u,1),R(y,x,q,I)),p.nextTurn()}}else s.from==="board"&&(p.movePiece(s.ref,i)?(console.log("Move successful"),p.nextTurn()):console.log("Move failed"));d=null,$=[],M(),document.getElementById("game-status").textContent=`Next move: ${p.currentPlayer}`;const r=p.checkWin();r&&(console.log(`Winner: ${r}`),_(r))}});g.addEventListener("mousemove",c=>{k=O(c,g);const{x:e,y:t}=O(c,g),n=x/2,o=H/2,s=W(e-n,t-o,f);(!b||b.q!==s.q||b.r!==s.r)&&(b=s,M())});g.addEventListener("mouseleave",()=>{b=null,M()});function oe(c,e,t){c.save(),c.fillStyle="rgba(0, 200, 0, 0.3)";const n=new Set,o=[];e.forEach(s=>{const i=`${s.q},${s.r}`;n.has(i)||(n.add(i),o.push(s))}),o.forEach(s=>{const{x:i,y:r}=t.hexToPixel(s.q,s.r);c.beginPath();for(let a=0;a<6;a++){const l=Math.PI/180*(60*a-30),u=i+f*Math.cos(l),m=r+f*Math.sin(l);a===0?c.moveTo(u,m):c.lineTo(u,m)}c.closePath(),c.fill()}),c.restore()}function M(){if(v.clear(),Q(y,v.ctx),v.drawBoard(p.board,b),d&&d.from==="bank"){const c=v.ctx;let e=d.type.toLowerCase();const t=C(e,d.color);c.drawImage(t,k.x-f,k.y-f,f*2,f*2)}else if(d&&d.from==="board"){const c=v.ctx,e=d.ref.type,t=d.ref.owner,n=C(e,t);c.drawImage(n,k.x-f,k.y-f,f*2,f*2)}$.length>0&&oe(v.ctx,$,v)}ie();M();document.getElementById("game-container")?.classList.remove("hidden");document.body.classList.add("ready");
